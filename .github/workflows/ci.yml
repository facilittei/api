name: CI

on:
  push:
    branches:
      - "dev"
      - "main"

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Development image tag
        if: github.ref == 'refs/heads/dev'
        id: image-tag
        run: echo '::set-output name=IMAGE_TAG::${{ github.sha }}'

      - name: Production image tag
        if: github.ref == 'refs/heads/main'
        id: image-tag
        run: echo '::set-output name=IMAGE_TAG::latest'

      - name: Build and push nginx
        id: build-image-nginx
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nginx
          IMAGE_TAG: ${{ steps.image-tag.outputs.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.nginx . \
            --build-arg 'VERSION=${{ github.sha }}'
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build and push php-fpm
        id: build-image-php-fpm
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: php-fpm
          IMAGE_TAG: ${{ steps.image-tag.outputs.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.php . \
            --build-arg 'VERSION=${{ github.sha }}'
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
